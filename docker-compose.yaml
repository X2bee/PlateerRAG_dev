services:
  postgres:
    image: postgres:15.4
    container_name: prg_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped

  polarag_trainer:
    container_name: prg_trainer
    image: pytorch/pytorch:2.6.0-cuda12.4-cudnn9-devel
    shm_size: 128g
    env_file: .env
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ./trainer_entrypoint.sh:/app/entrypoint.sh
    ports:
      - ${TRAINER_PORT}:${TRAINER_PORT}
    working_dir: /app
    command: [ "bash", "/app/entrypoint.sh" ]
  polarag_backend:
    container_name: prg_backend
    build: ./backend/.
    env_file: .env
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ./web_entrypoint.sh:/entrypoint.sh
    command: [ "bash", "/entrypoint.sh" ]
    stdin_open: true
    tty: true
    restart: unless-stopped
    ports:
      - ${NEXT_PUBLIC_BACKEND_PORT}:${NEXT_PUBLIC_BACKEND_PORT}
    depends_on:
      - postgres

  polarag_frontend:
    container_name: prg_frontend
    environment:
      - NEXT_PUBLIC_PORT=${NEXT_PUBLIC_PORT}
      - NEXT_PUBLIC_BACKEND_HOST=${NEXT_PUBLIC_BACKEND_HOST}
      - NEXT_PUBLIC_BACKEND_PORT=${NEXT_PUBLIC_BACKEND_PORT}
      - NEXT_PUBLIC_METRICS_HOST=${NEXT_PUBLIC_METRICS_HOST}
    build: ./frontend/.
    volumes:
      - ./web_front_entrypoint.sh:/entrypoint.sh
    command: [ "sh", "-c", "bash /entrypoint.sh" ]
    restart: unless-stopped
    ports:
      - ${NEXT_PUBLIC_PORT}:${NEXT_PUBLIC_PORT}

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    container_name: qdrant
    ports:
      - ${QDRANT_HTTP_PORT}:${QDRANT_HTTP_PORT}
      - ${QDRANT_GRPC_PORT}:${QDRANT_GRPC_PORT}
    expose:
      - ${QDRANT_HTTP_PORT}
      - ${QDRANT_GRPC_PORT}
      - 6335
    configs:
      - source: qdrant_config
        target: ${QDRANT_CONFIG_PATH}
    volumes:
      - ./qdrant_data:/qdrant/storage

  vllm:
    build: ./vllm/.
    restart: unless-stopped
    container_name: vllm
    env_file: .env
    ports:
      - ${VLLM_PORT}:${VLLM_PORT}
      - ${VLLM_CONTROLLER_PORT}:${VLLM_CONTROLLER_PORT}
    expose:
      - ${VLLM_PORT}
      - ${VLLM_CONTROLLER_PORT}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    entrypoint: ["/vllm/entrypoint.sh"]

volumes:
  postgres_data:

configs:
  qdrant_config:
    content: |
      log_level: INFO
